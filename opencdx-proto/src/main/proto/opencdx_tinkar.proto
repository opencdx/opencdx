/*
 * Proto file for maintaining the list of services implemented by OpenCDx Tinkar.
 */
syntax = "proto3";
option java_multiple_files = true;
package cdx.opencdx.grpc.service.tinkar;

/*
 * TinkarQueryRequest Message: Represents the user's request to search the tinkar db.
 */
message TinkarSearchQueryRequest {
  /*
   * The search string required for the request.
   */
  string query = 1;
  /*
   * The maximum number of results to be returned.
   */
  int32 max_results = 2;
}

/*
 * TinkarQueryResult Message: Represents the result structure returned by `Tinkar` service.
 */
message TinkarSearchQueryResult {
  int32 nid = 1;
  int32 rc_nid = 2;
  int32 pattern_nid = 3;
  int32 field_index = 4;
  float score = 5;
  string highlighted_string = 6;
}
/*
 * TinkarResponse Message: Represents the response that `Tinkar` service returns.
 */
message TinkarSearchQueryResponse {
  repeated TinkarSearchQueryResult results = 1;
}

/*
 * TinkarGetRequest Message: Represents the user's request to search the tinkar db.
 */
message TinkarGetRequest {
  /*
   * The concept ID required for the request.
   */
  string concept_id = 1;
}

/*
 * TinkarGetResult Message: Represents the result
 */
message TinkarGetResult {
  /*
   * The concept ID of the result.
   */
  string concept_id = 1;
  /*
   * The description of the concept ID of the result.
   */
  string description = 2;
}

/*
 * TinkarGetResponse Message: Represents the response that `Tinkar` service returns.
 */
message TinkarGetResponse {
  repeated TinkarGetResult results = 1;
}


/*
 * TinkarQueryService: Provides a gRPC endpoints for the querying the Tinkar DB
 */
service TinkarQueryService {
  /*
   * `searchTinkar` RPC method, which expects a `TinkarQueryRequest` and returns a `TinkarQueryResponse`.
   * Accepts a search query and returns a list of results
   */
  rpc searchTinkar(TinkarSearchQueryRequest) returns (TinkarSearchQueryResponse) {}
  /*
   * `getTinkarEntity` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResult`.
   * Accepts a Tinkar Concept PublicID and returns the name
   */
  rpc getTinkarEntity(TinkarGetRequest) returns (TinkarGetResult) {}
  /*
   * `getTinkarChildConcepts` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResponse`.
   * Accepts a Tinkar Concept PublicID and returns the child concepts
   */
  rpc getTinkarChildConcepts(TinkarGetRequest) returns (TinkarGetResponse) {}
  /*
   * `getTinkarDescendantConcepts` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResponse`.
   * Accepts a Tinkar Concept PublicID and returns the descendant concepts
   */
  rpc getTinkarDescendantConcepts(TinkarGetRequest) returns (TinkarGetResponse) {}
  /*
   * `getLIDRRecordConceptsFromTestKit` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResponse`.
   * Accepts a Test Kit Tinkar Concept PublicID and returns the LIDR Record concepts
   */
  rpc getLIDRRecordConceptsFromTestKit(TinkarGetRequest) returns (TinkarGetResponse) {}
  /*
   * `getResultConformanceConceptsFromLIDRRecord` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResponse`.
   * Accepts a LIDR Record Tinkar Concept PublicID and returns the Result Conformance concepts
   */
  rpc getResultConformanceConceptsFromLIDRRecord(TinkarGetRequest) returns (TinkarGetResponse) {}
  /*
   * `getAllowedResultConceptsFromResultConformance` RPC method, which expects a `TinkarGetRequest` and returns a `TinkarGetResponse`.
   * Accepts a Result Conformance Tinkar Concept PublicID and returns the Allowed Result concepts
   */
  rpc getAllowedResultConceptsFromResultConformance(TinkarGetRequest) returns (TinkarGetResponse) {}
}
