syntax = "proto3";

package cdx.opencdx.grpc.organization;

option java_multiple_files = true;
import "common.proto";
import "google/protobuf/timestamp.proto";

// Definition for an organization
message Organization {
  optional string id = 1; // Unique identifier for the organization
  optional string name = 2; // Name of the organization
  optional string description = 3; // Description of the organization
  optional google.protobuf.Timestamp founding_date = 4; // Date when the organization was founded
  optional cdx.opencdx.grpc.common.Address address = 5; // Physical address of the organization
  optional string website = 6; // Organization's website URL
  optional string industry = 7; // Industry or sector of the organization
  optional double revenue = 8; // Annual revenue of the organization
  optional string logo_url = 9; // URL to the organization's logo
  repeated string social_media_links = 10; // Links to social media profiles
  optional string mission_statement = 11; // Mission statement of the organization
  optional string vision_statement = 12; // Vision statement of the organization
  repeated cdx.opencdx.grpc.common.ContactInfo contacts = 13; // Contact information for the organization
  optional google.protobuf.Timestamp created = 14; // Timestamp when this event was created.
  optional google.protobuf.Timestamp modified = 15; // Timestamp when this event was modified.
  optional string creator = 16; // ID of the creator of this event.
  optional string modifier = 17; // ID of the modifier of this event.
}

// Definition for a workspace
message Workspace {
  optional string id = 1; // Unique identifier for the workspace
  optional string name = 2; // Name of the workspace
  optional string description = 3; // Description of the workspace
  string organization_id = 4; // ID of the organization that owns the workspace
  optional google.protobuf.Timestamp created_date = 5; // Date when the workspace was created
  optional string location = 6; // Physical location of the workspace
  optional string manager = 7; // Name of the workspace manager
  optional int32 capacity = 8; // Maximum capacity of the workspace
  repeated string facilities = 9; // Facilities available within the workspace
  optional string workspace_type = 10; // Type of workspace (e.g., office, co-working space)
  repeated string workspace_image_urls = 11; // URLs to images of the workspace
  optional string usage_policy = 12; // Policies and rules for using the workspace
  optional string availability_schedule = 13; // Schedule of when the workspace is available
  repeated Department departments = 14; // Departments within the workspace
  optional google.protobuf.Timestamp created = 15; // Timestamp when this event was created.
  optional google.protobuf.Timestamp modified = 16; // Timestamp when this event was modified.
  optional string creator = 17; // ID of the creator of this event.
  optional string modifier = 18; // ID of the modifier of this event.
}


// Department within an organization or workspace
message Department {
  optional string id = 1; // Unique identifier for the department
  optional string name = 2; // Name of the department
  optional string description = 3; // Description of the department
  repeated Employee employees = 4; // Employees within the department
}

// Employee within a department
message Employee {
  optional string employee_id = 1; // Unique identifier for the employee
  optional cdx.opencdx.grpc.common.FullName name = 2; // Full name of the employee
  optional string title = 3; // Title or position of the employee
  repeated cdx.opencdx.grpc.common.PhoneNumber phone_numbers = 4; // User's phone numbers
  repeated cdx.opencdx.grpc.common.EmailAddress email = 5; // User's email address
}

// Empty message used in RPC methods
message Empty {}

// Request for creating an organization
message CreateOrganizationRequest {
  optional Organization organization = 1; // Organization details for creation
}

// Response for creating an organization
message CreateOrganizationResponse {
  optional Organization organization = 1; // Created organization details
}

// Request for retrieving organization details by ID
message GetOrganizationDetailsByIdRequest {
  optional string organization_id = 1; // Unique identifier for the organization
}

// Response for retrieving organization details by ID
message GetOrganizationDetailsByIdResponse {
  optional Organization organization = 1; // Retrieved organization details
}

// Request for updating organization details
message UpdateOrganizationRequest {
  optional Organization organization = 1; // Updated organization details
}

// Response for updating organization details
message UpdateOrganizationResponse {
  optional Organization organization = 1; // Updated organization details
}

// Response for listing all organizations
message ListOrganizationsResponse {
  repeated Organization organizations = 1; // List of organizations
}

// Request for creating a workspace within an organization
message CreateWorkspaceRequest {
  optional Workspace workspace = 1; // Workspace details for creation
}

// Response for creating a workspace within an organization
message CreateWorkspaceResponse {
  optional Workspace workspace = 1; // Created workspace details
}

// Request for retrieving workspace details by ID
message GetWorkspaceDetailsByIdRequest {
  optional string workspace_id = 1; // Unique identifier for the workspace
}

// Response for retrieving workspace details by ID
message GetWorkspaceDetailsByIdResponse {
  optional Workspace workspace = 1; // Retrieved workspace details
}

// Request for updating workspace details
message UpdateWorkspaceRequest {
  optional Workspace workspace = 1; // Updated workspace details
}

// Response for updating workspace details
message UpdateWorkspaceResponse {
  optional Workspace workspace = 1; // Updated workspace details
}

// Response for listing all workspaces within an organization
message ListWorkspacesResponse {
  repeated Workspace workspaces = 1; // List of workspaces
}

service OrganizationService {
  // RPC method to create a new organization
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);

  // RPC method to retrieve organization details by ID
  rpc GetOrganizationDetailsById(GetOrganizationDetailsByIdRequest) returns (GetOrganizationDetailsByIdResponse);

  // RPC method to update organization details
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse);

  // RPC method to list all organizations
  rpc ListOrganizations(Empty) returns (ListOrganizationsResponse);
}

service WorkspaceService {
  // RPC method to create a new workspace within an organization
  rpc CreateWorkspace(CreateWorkspaceRequest) returns (CreateWorkspaceResponse);

  // RPC method to retrieve workspace details by ID
  rpc GetWorkspaceDetailsById(GetWorkspaceDetailsByIdRequest) returns (GetWorkspaceDetailsByIdResponse);

  // RPC method to update workspace details
  rpc UpdateWorkspace(UpdateWorkspaceRequest) returns (UpdateWorkspaceResponse);

  // RPC method to list all workspaces within an organization
  rpc ListWorkspaces(Empty) returns (ListWorkspacesResponse);
}
