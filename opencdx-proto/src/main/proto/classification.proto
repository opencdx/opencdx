syntax = "proto3";
option java_multiple_files = true;
package cdx.opencdx.grpc.neural.classification;

import "common.proto";
import "google/protobuf/timestamp.proto";

// Enum to represent different specimen types
enum SpecimenType {
    BLOOD = 0;  // Specimen type: Blood
    SWAB = 1;   // Specimen type: Swab
    URINE = 2;  // Specimen type: Urine
}

// Enum to represent severity levels
enum SeverityLevel {
    LOW = 0;    // Low severity level
    MEDIUM = 1; // Medium severity level
    HIGH = 2;   // High severity level
}

/*
 * Location message represents geographical coordinates.
 */
message Location {
    double latitude = 1;   // Latitude of the location
    double longitude = 2;  // Longitude of the location
}

/*
 * Interpretation message provides positive and negative interpretation guides.
 */
message Interpretation {
    map<string, string> positive = 1;  // Positive interpretation guide (e.g., {"result": "Two lines"})
    map<string, string> negative = 2;  // Negative interpretation guide (e.g., {"result": "One line"})
}

/*
 * TestKit message represents information about a test kit.
 */
message TestKit {
    optional string name = 1;               // Name of the test kit
    optional string target_disease = 2;     // Target disease for the test kit
    SpecimenType specimen_type = 3; // Type of specimen required for the test (e.g., BLOOD, SWAB, URINE)
    optional string procedure = 4;          // Procedure for conducting the test
    Interpretation interpretation_guide = 5;  // Interpretation guide for test results
    optional string brand = 6;              // Brand of the test kit
    optional string approval_status = 7;    // Approval status of the test kit (e.g., FDA-approved, CE-marked)
    optional float accuracy = 8;            // Accuracy percentage of the test kit
    optional int32 test_duration = 9;       // Duration of the test in minutes
}

/*
 * Symptom message represents information about a symptom.
 */
message Symptom {
    optional string name = 1;                   // Name of the symptom
    SeverityLevel severity = 2;        // Severity level of the symptom (LOW, MEDIUM, HIGH)
    optional google.protobuf.Timestamp onset_date = 3; // Date when the symptom first appeared (in UTC format)
    optional cdx.opencdx.grpc.common.Duration duration = 4;               // Duration of the symptom in days or weeks
    optional string additional_details = 5;    // Additional details about the symptom
}

/*
 * UserAnswer message represents user-provided information for test kit classification.
 */
message UserAnswer {
    optional string test_kit_id = 1;              // ID of the chosen test kit
    repeated Symptom symptoms = 2;      // List of symptoms reported by the user
    oneof result {                      // User-provided test result, either image data or textual description
        bytes image_data = 3;           // Image data representing the test result
        string text_result = 9;         // Textual description of the test result
    }
    optional int32 age = 4;                       // Age of the user
    optional cdx.opencdx.grpc.common.Gender gender = 5;                   // Gender of the user
    optional string medical_conditions = 6;      // Medical conditions of the user (comma-separated list)
    optional bool pregnancy_status = 7;         // Pregnancy status of the user (e.g., pregnant, not pregnant)
    optional string language_preference = 8;     // Language preference of the user
    Location user_location = 10;        // Location of the user
}

/*
 * ClassificationResponse message represents the result of test kit classification.
 */
message ClassificationResponse {
    optional string test_kit_name = 1;            // Recommended test kit name
    optional float confidence = 2;                // Confidence score of the classification
    optional float positive_probability = 3;      // Probability of a positive test result
    optional string message = 4;                  // Explanatory message regarding the classification
    optional string availability = 5;             // Availability status of the recommended test kit
    optional float cost = 6;                      // Cost associated with the recommended test kit
    optional string further_actions = 7;          // Recommendations for further actions based on the classification
    repeated TestKit alternative_options = 8;  // List of alternative test kit options
    optional string feedback_url = 9;             // URL for user feedback on the classification result
    google.protobuf.Timestamp timestamp = 10;  // Timestamp of the classification result
    optional string user_id = 11;                 // User identifier associated with the classification
}

/*
 * UserClassificationRequest represents input based on the user-provided information.
 */
message ClassificationRequest {
    UserAnswer user_answer=1; // user entered and generated information
}

/*
 * TestKitClasClassifierServicesifier service provides the Classify RPC for test kit classification.
 */
service ClassificationService {
    rpc Classify(ClassificationRequest) returns (ClassificationResponse);  // Classify RPC takes a UserAnswer input and returns a ClassificationResult
}
