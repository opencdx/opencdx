syntax = "proto3";

package cdx.opencdx.grpc.organization;

option java_multiple_files = true;

// Definition for an organization
message Organization {
  optional string organization_id = 1; // Unique identifier for the organization
  optional string name = 2; // Name of the organization
  optional string description = 3; // Description of the organization
  optional string founding_date = 4; // Date when the organization was founded
  optional string address = 5; // Physical address of the organization
  optional string website = 6; // Organization's website URL
  optional string industry = 7; // Industry or sector of the organization
  optional double revenue = 8; // Annual revenue of the organization
  optional string logo_url = 9; // URL to the organization's logo
  optional repeated string social_media_links = 10; // Links to social media profiles
  optional string mission_statement = 11; // Mission statement of the organization
  optional string vision_statement = 12; // Vision statement of the organization
  optional repeated ContactInfo contacts = 13; // Contact information for the organization
  optional repeated Workspace workspace = 14; // Departments (Workspaces) within the organization
}

// Definition for a workspace
message Workspace {
  optional string id = 1; // Unique identifier for the workspace
  optional string name = 2; // Name of the workspace
  optional string description = 3; // Description of the workspace
  optional string created_date = 4; // Date when the workspace was created
  optional string location = 5; // Physical location of the workspace
  optional string manager = 6; // Name of the workspace manager
  optional int32 capacity = 7; // Maximum capacity of the workspace
  optional repeated string facilities = 8; // Facilities available within the workspace
  optional string workspace_type = 9; // Type of workspace (e.g., office, co-working space)
  optional repeated string workspace_image_urls = 10; // URLs to images of the workspace
  optional string usage_policy = 11; // Policies and rules for using the workspace
  optional string availability_schedule = 12; // Schedule of when the workspace is available
  optional repeated Department departments = 13; // Departments within the workspace
}

// Contact information for an organization or workspace
message ContactInfo {
  optional string contact_name = 1; // Name of the contact person
  optional string email = 2; // Email address of the contact person
  optional string phone = 3; // Phone number of the contact person
}

// Department within an organization or workspace
message Department {
  optional string id = 1; // Unique identifier for the department
  optional string name = 2; // Name of the department
  optional string description = 3; // Description of the department
  optional repeated Employee employees = 4; // Employees within the department
}

// Employee within a department
message Employee {
  optional string employee_id = 1; // Unique identifier for the employee
  optional string name = 2; // Name of the employee
  optional string title = 3; // Title or position of the employee
  optional string email = 4; // Email address of the employee
  optional string phone = 5; // Phone number of the employee
}

// Service for managing organizations
service OrganizationService {
  // RPC method to create a new organization
  rpc CreateOrganization(Organization) returns (Organization);

  // RPC method to retrieve organization details by ID
  rpc GetOrganizationDetailsById(string) returns (Organization);

  // RPC method to update organization details
  rpc UpdateOrganization(Organization) returns (Organization);

  // RPC method to list all organizations
  rpc ListOrganizations(Empty) returns (repeated Organization);
}

// Service for managing workspaces within an organization
service WorkspaceService {
  // RPC method to create a new workspace within an organization
  rpc CreateWorkspace(Workspace) returns (Workspace);

  // RPC method to retrieve workspace details by ID
  rpc GetWorkspaceDetailsById(string) returns (Workspace);

  // RPC method to update workspace details
  rpc UpdateWorkspace(Workspace) returns (Workspace);

  // RPC method to list all workspaces within an organization
  rpc ListWorkspaces(string) returns (repeated Workspace);
}
