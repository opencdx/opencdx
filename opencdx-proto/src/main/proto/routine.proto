syntax = "proto3";

package cdx.opencdx.grpc.routine;

option java_multiple_files = true;

import "google/protobuf/timestamp.proto";

/**
 * Entities for the Routine System
 */
message Routine {
  enum Status { // Entities for Routine status enumeration
    SCHEDULED = 0; // The routine has been planned and scheduled
    IN_PROGRESS = 1; // The routine is currently in progress
    COMPLETED = 2; // The routine has been successfully completed
    CANCELED = 3; // The routine was scheduled but got canceled
    DELAYED = 4; // The routine is behind schedule or delayed
    PENDING_APPROVAL = 5; // The routine is awaiting approval
    FAILED = 6; // The routine execution was not successful
    ON_HOLD = 7; // The routine is temporarily on hold
    NOT_STARTED = 8; // The routine has not started yet
    UNDER_REVIEW = 9; // The routine or its results are under review
    DISCHARGED = 10; // Applicable in healthcare settings, indicating completion
    RECALLED = 11; // The routine has been recalled or needs to be re-executed
  }

  optional string routine_id = 1; // Unique identifier for each routine process
  optional string name = 2; // Name or title for the routine process
  optional string description = 3; // Additional details describing the nature of the routine
  Status  status = 4; // Status indicating the state of the routine (e.g., in progress, completed)
  google.protobuf.Timestamp creation_datetime = 5; // Timestamp for when the routine was created
  google.protobuf.Timestamp last_updated_datetime = 6; // Timestamp for the last update to the routine
  optional string assigned_user = 7; // User or team responsible for the routine
  repeated string associated_protocols = 8; // Reference to clinical protocols linked to the routine
}

/**
 * Entities for the Delivery Tracking System
 */
message DeliveryTracking {
  enum Status { // Entities for Delivery status enumeration
    IN_TRANSIT = 0; // The delivery is currently in transit
    DELIVERED = 1; // The delivery has been successfully completed
    CANCELED = 2; // The delivery was scheduled but got canceled
    PENDING_PICKUP = 3; // The delivery is awaiting pickup
    OUT_FOR_DELIVERY = 4; // The delivery is out for delivery
    FAILED_DELIVERY = 5; // The delivery attempt was not successful
    RETURNED = 6; // The delivery has been returned
    DELAYED = 7; // The delivery is behind schedule or delayed
    ON_HOLD = 8; // The delivery is temporarily on hold
    EXCEPTION = 9; // There is an exception or issue with the delivery
    LOST = 10; // The delivery is lost or cannot be located
  }

  optional string delivery_id = 1; // Unique identifier for each tracked delivery
  optional string order_id = 2; // Identifier linking the delivery to an order or request
  optional Status status = 3; // Status of the delivery (e.g., in transit, delivered)
  google.protobuf.Timestamp start_datetime = 4; // Timestamp when the delivery process started
  google.protobuf.Timestamp end_datetime = 5; // Timestamp when the delivery was completed
  optional string current_location = 6; // Information about the current location of the delivery
  optional string recipient = 7; // Information about the recipient or receiver of the delivery
  repeated string delivery_items = 8; // Details of the items being delivered
  optional string assigned_courier = 9; // Courier or delivery person responsible for the delivery
}

/**
 * Entities for the Clinical Protocol Execution
 */
message ClinicalProtocolExecution {
  enum Status { // Entities for protocol Execution status enumeration
    NOT_STARTED = 0; // The protocol execution has not started yet
    IN_PROGRESS = 1; // The protocol execution is currently in progress
    COMPLETED = 2; // The protocol execution has been successfully completed
    FAILED = 3; // The protocol execution was not successful
    CANCELED = 4; // The protocol execution was scheduled but got canceled
    DELAYED = 5; // The protocol execution is behind schedule or delayed
    UNDER_REVIEW = 6; // The protocol execution or its results are under review
  }

  optional string execution_id = 1; // Unique identifier for each execution of a clinical protocol
  optional string routine_id = 2; // Reference to the routine associated with the clinical protocol execution
  optional string protocol_id = 3; // Reference to the specific clinical protocol being executed
  optional Status status = 4; // Status of the protocol execution (e.g., not started, in progress, completed)
  google.protobuf.Timestamp start_datetime = 5; // Timestamp when the execution of the protocol began
  google.protobuf.Timestamp end_datetime = 6; // Timestamp when the execution was completed
  optional string results = 7; // Details about the results or outcomes of the protocol execution
  optional string assigned_medical_staff = 8; // Information about the medical professionals responsible for the protocol execution
  repeated string steps = 9; // Representation of the individual steps or actions within the protocol
}

/**
 * Entities for Create Conditions
 */
message LabOrder {
  optional string lab_order_id = 1; // Unique identifier for lab orders
  optional string test_name = 2; // Name of the lab test
  google.protobuf.Timestamp order_datetime= 3; // Timestamp of the lab order
  optional string matched_value_set = 4; // Value set that triggered the eICR
  repeated string related_entities = 5; // Related entities (e.g., Patients, Practitioners)
}

/**
 * Diagnosis Data
 */
message Diagnosis {
  optional string diagnosis_id = 1; // Unique identifier for diagnoses
  optional string diagnosis_code = 2; // Diagnosis code
  google.protobuf.Timestamp diagnosis_datetime= 3; // Timestamp of the diagnosis
  optional string matched_value_set = 4; // Value set that triggered the eICR
  repeated string related_entities = 5; // Related entities (e.g., Patients, Practitioners)
}

/**
 * Suspected Diagnosis data
 */
message SuspectedDiagnosis {
  optional string suspected_diagnosis_id = 1; // Unique identifier for suspected diagnoses
  optional string diagnosis_code = 2; // Diagnosis code for suspected diagnoses
  google.protobuf.Timestamp diagnosis_datetime= 3; // Timestamp of the suspected diagnosis
  optional string matched_value_set = 4; // Value set that triggered the eICR
  repeated string related_entities = 5; // Related entities (e.g., Patients, Practitioners)
}

/**
 * Lab Result data
 */
message LabResult {
  optional string result_id = 1; // Unique identifier for lab results
  optional string result_value = 2; // Value of the lab result
  google.protobuf.Timestamp result_datetime= 3; // Timestamp of the lab result
  optional string matched_value_set = 4; // Value set that triggered the eICR
  repeated string related_entities = 5; // Related entities (e.g., Patients, Lab Facilities)
}

/**
 * Medication data
 */
message Medication {
  optional string medication_id = 1; // Unique identifier for medications
  optional string medication_name = 2; // Name of the medication
  google.protobuf.Timestamp administration_datetime= 3; // Timestamp of medication administration
  optional string matched_value_set = 4; // Value set that triggered the eICR
  repeated string related_entities = 5; // Related entities (e.g., Patients, Practitioners)
}

// gRPC services and operations
service RoutineSystemService {
  // Create a new routine entity
  rpc CreateRoutine(RoutineRequest) returns (RoutineResponse);

  // Retrieve information about a routine entity 
  rpc GetRoutine(RoutineRequest) returns (RoutineResponse);

  // Create a new delivery tracking entity
  rpc CreateDeliveryTracking(DeliveryTrackingRequest) returns (DeliveryTrackingResponse);

  // Retrieve information about a delivery tracking entity 
  rpc GetDeliveryTracking(DeliveryTrackingRequest) returns (DeliveryTrackingResponse);

  // Create a new clinical protocol execution entity
  rpc CreateClinicalProtocolExecution(ClinicalProtocolExecutionRequest) returns (ClinicalProtocolExecutionResponse);

  // Retrieve information about a clinical protocol execution entity 
  rpc GetClinicalProtocolExecution(ClinicalProtocolExecutionRequest) returns (ClinicalProtocolExecutionResponse);

  // Create a new lab order entity
  rpc CreateLabOrder(LabOrderRequest) returns (LabOrderResponse);

  // Retrieve information about a lab order entity 
  rpc GetLabOrder(LabOrderRequest) returns (LabOrderResponse);

  // Create a new diagnosis entity
  rpc CreateDiagnosis(DiagnosisRequest) returns (DiagnosisResponse);

  // Retrieve information about a diagnosis entity 
  rpc GetDiagnosis(DiagnosisRequest) returns (DiagnosisResponse);

  // Create a new suspected diagnosis entity
  rpc CreateSuspectedDiagnosis(SuspectedDiagnosisRequest) returns (SuspectedDiagnosisResponse);

  // Retrieve information about a suspected diagnosis entity 
  rpc GetSuspectedDiagnosis(SuspectedDiagnosisRequest) returns (SuspectedDiagnosisResponse);

  // Create a new lab result entity
  rpc CreateLabResult(LabResultRequest) returns (LabResultResponse);

  // Retrieve information about a lab result entity 
  rpc GetLabResult(LabResultRequest) returns (LabResultResponse);

  // Create a new medication entity
  rpc CreateMedication(MedicationRequest) returns (MedicationResponse);

  // Retrieve information about a medication entity 
  rpc GetMedication(MedicationRequest) returns (MedicationResponse);
}  

//Request and Response messages for CreateRoutine operation
message RoutineRequest {
  Routine routine = 1;
}

message RoutineResponse {
  Routine routine = 1;
}

// Request and Response messages for CreateDeliveryTracking operation
message DeliveryTrackingRequest {
  DeliveryTracking delivery_tracking = 1;
}

message DeliveryTrackingResponse {
  DeliveryTracking delivery_tracking = 1;
}

// Request and Response messages for CreateClinicalProtocolExecution operation
message ClinicalProtocolExecutionRequest {
  ClinicalProtocolExecution clinical_protocol_execution = 1;
}

message ClinicalProtocolExecutionResponse {
  ClinicalProtocolExecution clinical_protocol_execution = 1;
}

// Request and Response messages for CreateLabOrder operation
message LabOrderRequest {
  LabOrder lab_order = 1;
}

message LabOrderResponse {
  LabOrder lab_order = 1;
}

// Request and Response messages for CreateDiagnosis operation
message DiagnosisRequest {
  Diagnosis diagnosis = 1;
}

message DiagnosisResponse {
  Diagnosis diagnosis = 1;
}

// Request and Response messages for CreateSuspectedDiagnosis operation
message SuspectedDiagnosisRequest {
  SuspectedDiagnosis suspected_diagnosis = 1;
}

message SuspectedDiagnosisResponse {
  SuspectedDiagnosis suspected_diagnosis = 1;
}

// Request and Response messages for CreateLabResult operation
message LabResultRequest {
  LabResult lab_result = 1;
}

message LabResultResponse {
  LabResult lab_result = 1;
}

// Request and Response messages for CreateMedication operation
message MedicationRequest {
  Medication medication = 1;
}

message MedicationResponse {
  Medication medication = 1;
}
