spring:
  banner:
    location: /banner.txt
  application:
    name: Gateway
  ssl:
    bundle:
      jks:
        web-server:
          key:
            alias: gateway
          keystore:
            location: file:/certs/opencdx-keystore.p12
            password: opencdx
            type: PKCS12
  cloud:
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true
        pool:
          max-connections: 1000
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      enabled: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        - id: grpc-audit
          uri: https://audit:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.audit.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-classification
          uri: https://classification:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.classification.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-communications
          uri: https://communications:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.communications.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-health
          uri: https://health:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.health.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-iam
          uri: https://iam:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.iam.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-logistics
          uri: https://logistics:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.logistics.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-media
          uri: https://media:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.media.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-questionnaire
          uri: https://questionnaire:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.questionnaire.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: grpc-tinkar
          uri: https://tinkar:9090
          predicates:
            - Path=/cdx.opencdx.grpc.service.tinkar.*/**
          filters:
            - AddResponseHeader=X-Request-header, header-value

eureka:
  client:
    service-url:
      defaultZone: https://discovery:8761/eureka/
    registry-fetch-interval-seconds: 5
    tls:
      enabled: 'true'
      key-store: file:/certs/opencdx-keystore.p12
      key-store-type: PKCS12
      key-store-password: opencdx
      trust-store: file:/certs/opencdx-keystore.p12
      trust-store-type: PKCS12
      trust-store-password: opencdx
      key-password: opencdx
  instance:
    nonSecurePortEnabled: false
    securePortEnabled: true
    statusPageUrl: https://${spring.application.name}:${server.port}/info
    healthCheckUrl: https://${spring.application.name}:${server.port}/actuator/health
    homePageUrl: https://${spring.application.name}:${server.port}/

management:
  info:
    java:
      enabled: true
    env:
      enabled: true
    git:
      mode: full
  endpoint:
    gateway:
      enabled: true
    health:
      probes:
        enabled: true
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    enabled: true
    sampling.probability: 1.0
    propagation:
      type: b3
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  zipkin:
    tracing:
      endpoint: https://zipkin:9411/api/v2/spans
  prometheus:
    metrics:
      export:
        enabled: true
logging:
  level:
    health:
      safe: debug
  pattern:
    level: "${spring.application.name:} trace_id=%mdc{traceId} span_id=%mdc{spanId} trace_flags=%mdc{traceFlags} %p"
    file: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${spring.application.name:} trace_id=%mdc{traceId} span_id=%mdc{spanId} trace_flags=%mdc{traceFlags} %p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  file:
    name: "/var/log/sample-boot-application.log"
server:
  port: 8080
  ssl:
    enabled: true
    bundle: web-server
    client-auth: none
  http2:
    enabled: true

opencdx:
  client:
    trustStore: /certs/opencdx-clients.pem