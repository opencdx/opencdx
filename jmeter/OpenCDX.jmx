<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 500 Loops - HelloWorld" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">500</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="HelloWorld / SayHello" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.helloworld.Greeter/SayHello</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
	&quot;name&quot;:&quot;Hello&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/helloworld/hello" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;jeff&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/helloworld/hello</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 500 Loops - Audit" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">500</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="AuditService / Event" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.audit.AuditService/Event</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
  &quot;created&quot; : &quot;1970-01-01T00:00:00Z&quot;,
  &quot;eventType&quot; : &quot;AUDIT_EVENT_TYPE_USER_PII_CREATED&quot;,
  &quot;actor&quot; : {
    &quot;identity&quot; : &quot;&quot;,
    &quot;role&quot; : &quot;&quot;,
    &quot;networkAddress&quot; : &quot;192.198.0.1&quot;,
    &quot;agentType&quot; : &quot;AGENT_TYPE_HUMAN_USER&quot;
  },
  &quot;purposeOfUse&quot; : &quot;&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/event/audit" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;created&quot; : &quot;1970-01-01T00:00:00Z&quot;,&#xd;
  &quot;eventType&quot; : &quot;AUDIT_EVENT_TYPE_USER_PII_CREATED&quot;,&#xd;
  &quot;actor&quot; : {&#xd;
    &quot;identity&quot; : &quot;&quot;,&#xd;
    &quot;role&quot; : &quot;&quot;,&#xd;
    &quot;networkAddress&quot; : &quot;192.198.0.1&quot;,&#xd;
    &quot;agentType&quot; : &quot;AGENT_TYPE_HUMAN_USER&quot;&#xd;
  },&#xd;
  &quot;purposeOfUse&quot; : &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/audit/event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 500 Loops - Communications Immediate" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">500</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_WELCOME&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listEmailTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listEmailTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_ALERT&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listSMSTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listSMSTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_IMMEDIATE&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.event_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_IMMEDIATE&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listNotificationEvents" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listNotificationEvents</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/SendNotification" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/SendNotification</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/DeleteEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/DeleteEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/DeleteNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/DeleteNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/DeleteSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/DeleteSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_NEWSLETTER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_REMINDER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET} (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_IMMEDIATE&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.eventId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [PUT]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_IMMEDIATE&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/notification [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/notification</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [DELETE]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [DELETE}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [DELETE]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 100 Loops - Communications High" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_WELCOME&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listEmailTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listEmailTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_ALERT&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listSMSTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listSMSTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_HIGH&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.event_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_HIGH&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listNotificationEvents" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listNotificationEvents</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/SendNotification" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/SendNotification</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_NEWSLETTER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_REMINDER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET} (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_HIGH&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.eventId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [PUT]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_HIGH&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/notification [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/notification</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 100 Loops - Communications Medium" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_WELCOME&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listEmailTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listEmailTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_ALERT&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listSMSTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listSMSTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_MEDIUM&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.event_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_MEDIUM&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listNotificationEvents" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listNotificationEvents</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/SendNotification" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/SendNotification</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_NEWSLETTER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_REMINDER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET} (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_MEDIUM&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.eventId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [PUT]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_MEDIUM&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/notification [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/notification</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 100 Loops - Communications Low" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_WELCOME&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetEmailTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${emailTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateEmailTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateEmailTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listEmailTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listEmailTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_ALERT&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.template_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetSMSTemplate (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${smsTemplateId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateSMSTemplate" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateSMSTemplate</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;NOTIFICATION&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listSMSTemplates" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listSMSTemplates</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/CreateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/CreateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_LOW&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.event_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/GetNotificationEvent (Cache)" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/GetNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;template_id&quot;: &quot;${eventId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/UpdateNotificationEvent" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/UpdateNotificationEvent</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_LOW&quot;}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/listNotificationEvents" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/listNotificationEvents</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="CommunicationService/SendNotification" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.communication.CommunicationService/SendNotification</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_NEWSLETTER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emailTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${emailTemplateId}&quot;,&quot;subject&quot;:&quot;&quot;,&quot;content&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_REMINDER&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract SMS Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">smsTemplateId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.templateId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [GET} (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [PUT]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;templateId&quot;:&quot;${smsTemplateId}&quot;,&quot;message&quot;:&quot;&quot;,&quot;variables&quot;:[],&quot;templateType&quot;:&quot;TEMPLATE_TYPE_CONFIRMATION&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_LOW&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Event Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">eventId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.eventId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [GET] (Cache)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [PUT]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;eventName&quot;:&quot;&quot;,&quot;eventDescription&quot;:&quot;&quot;,&quot;emailTemplateId&quot;:&quot;${emailTemplateId}&quot;,&quot;smsTemplateId&quot;:&quot;${smsTemplateId}&quot;,&quot;eventParameters&quot;:[],&quot;priority&quot;:&quot;NOTIFICATION_PRIORITY_LOW&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event/list [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/notification [POST]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;eventId&quot;:&quot;${eventId}&quot;,&quot;customData&quot;:{},&quot;toEmail&quot;:[&quot;testuser1@opencdx.com&quot;],&quot;ccEmail&quot;:[],&quot;bccEmail&quot;:[],&quot;emailAttachments&quot;:[],&quot;toPhoneNumber&quot;:[&quot;123-456-7890&quot;],&quot;variables&quot;:{},&quot;recipientsId&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/notification</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/event [DELETE]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/event/${eventId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/sms [DELETE}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/sms/${smsTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/communications/email [DELETE]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/communications/email/${emailTemplateId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 500 Loops - Connected Test" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">500</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Connected Test /  SubmitTest" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.connected.HealthcareService/SubmitTest</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;basicInfo&quot;: {
        &quot;healthServiceId&quot;: &quot;amet minim culpa sed&quot;,
        &quot;nationalHealthId&quot;: 677453581,
        &quot;source&quot;: &quot;ea&quot;,
        &quot;tenantId&quot;: &quot;consequat nostrud&quot;,
        &quot;type&quot;: &quot;aliqua culpa aute enim&quot;,
        &quot;userId&quot;: &quot;6512d485f7f8935ea3994013&quot;,
        &quot;vendorLabTestId&quot;: &quot;ut Ut velit non&quot;
    },
    &quot;orderInfo&quot;: {
        &quot;encounterId&quot;: &quot;laboris fugiat&quot;,
        &quot;isSyncedWithEHR&quot;: true,
        &quot;orderId&quot;: &quot;cupidatat occaecat mollit sit ad&quot;,
        &quot;questionnaireId&quot;: &quot;proident sit eu dolor&quot;,
        &quot;result&quot;: &quot;officia anim sed&quot;,
        &quot;status&quot;: &quot;adipisicing&quot;,
        &quot;statusMessage&quot;: &quot;irure ut officia&quot;,
        &quot;statusMessageActions&quot;: [
            {
                &quot;id&quot;: &quot;deserunt enim qui&quot;,
                &quot;Value&quot;: &quot;ex esse&quot;,
                &quot;Description&quot;: &quot;incididunt&quot;
            },
            {
                &quot;Value&quot;: &quot;eu non occaecat elit&quot;,
                &quot;id&quot;: &quot;ipsum nisi&quot;,
                &quot;Description&quot;: &quot;officia quis&quot;
            },
            {
                &quot;id&quot;: &quot;nulla est ut fugiat&quot;,
                &quot;Description&quot;: &quot;exercitation dolore irure ipsum Excepteur&quot;,
                &quot;Value&quot;: &quot;Duis aliqua amet&quot;
            },
            {
                &quot;Value&quot;: &quot;sed est adipisicing ullamco&quot;,
                &quot;id&quot;: &quot;in aliqua minim quis consectetur&quot;,
                &quot;Description&quot;: &quot;adipisicing ipsum et esse&quot;
            }
        ]
    },
    &quot;paymentDetails&quot;: {
        &quot;insuranceInfoId&quot;: &quot;Duis Ut exercitation cillum&quot;,
        &quot;paymentDetails&quot;: &quot;in&quot;,
        &quot;paymentMode&quot;: &quot;commodo in deserunt sunt Lorem&quot;,
        &quot;paymentTransactionId&quot;: &quot;nisi eiusmod&quot;
    },
    &quot;providerInfo&quot;: {
        &quot;assignedProviderID&quot;: -44602025,
        &quot;orderingProviderId&quot;: &quot;dolore et tempor&quot;,
        &quot;orderingProviderNPI&quot;: -211209566
    },
    &quot;testDetails&quot;: {
        &quot;deviceIdentifier&quot;: -1515070796,
        &quot;deviceSerialNumber&quot;: &quot;sunt quis irure enim&quot;,
        &quot;diagnostics&quot;: &quot;consequat amet ut&quot;,
        &quot;internalTestId&quot;: &quot;ullamco in&quot;,
        &quot;isAutoGenerated&quot;: false,
        &quot;isOnsiteTest&quot;: true,
        &quot;labTestType&quot;: &quot;quis deserunt eu commodo adipisicing&quot;,
        &quot;labVendorConfirmationId&quot;: &quot;ad tempor incididunt ipsum quis&quot;,
        &quot;medicalCode&quot;: &quot;pariatur non sit exercitation&quot;,
        &quot;medications&quot;: &quot;sit sed Ut ut&quot;,
        &quot;metadata&quot;: {
            &quot;casseteExpirationDate&quot;: &quot;sint consequat reprehenderit ut&quot;,
            &quot;casseteLotNumber&quot;: &quot;sed est non qui&quot;,
            &quot;cassetteVerification&quot;: &quot;ad cillum&quot;,
            &quot;imageType&quot;: &quot;cupidatat&quot;,
            &quot;kitUploadID&quot;: &quot;Lorem deserunt&quot;,
            &quot;labTestOrderableId&quot;: &quot;et sit nostrud ex cupidatat&quot;,
            &quot;manufacturer&quot;: &quot;quis cillum&quot;,
            &quot;outcome&quot;: &quot;reprehenderit veniam ut Ut&quot;,
            &quot;outcomeIgG&quot;: true,
            &quot;outcomeIgM&quot;: true,
            &quot;qrData&quot;: &quot;incididunt pariatur&quot;,
            &quot;responseCode&quot;: 1699231156,
            &quot;responseMessage&quot;: &quot;commodo mollit culpa quis consectetur&quot;,
            &quot;responseTitle&quot;: &quot;Ut laboris sint nisi non&quot;,
            &quot;selfAssessmentOutcome&quot;: &quot;dolore officia&quot;,
            &quot;selfAssessmentOutcomeIgG&quot;: false,
            &quot;selfAssessmentOutcomeIgM&quot;: true,
            &quot;skuId&quot;: &quot;cupidatat anim officia&quot;,
            &quot;type&quot;: &quot;fugiat incididunt nisi dolor sunt&quot;
        },
        &quot;notificationFlag&quot;: &quot;ut nulla sint&quot;,
        &quot;orderableTestIds&quot;: [
            &quot;est enim cupidatat dolore&quot;
        ],
        &quot;orderableTestResults&quot;: [
            {
                &quot;responseMessage&quot;: &quot;ipsum reprehenderit&quot;,
                &quot;responseTitle&quot;: &quot;voluptate Duis et&quot;,
                &quot;outcome&quot;: &quot;velit sit Ut&quot;,
                &quot;orderableTestId&quot;: &quot;cillum&quot;,
                &quot;collectionDate&quot;: &quot;ut&quot;,
                &quot;testResult&quot;: &quot;aliquip tempor cillum reprehenderit officia&quot;,
                &quot;responseCode&quot;: 1582878818
            }
        ],
        &quot;orderableTests&quot;: [
            {
                &quot;orderableTestId&quot;: &quot;irure&quot;
            },
            {
                &quot;orderableTestId&quot;: &quot;aute elit aliqua ea&quot;
            },
            {
                &quot;orderableTestId&quot;: &quot;nostrud laborum Lorem eu&quot;
            },
            {
                &quot;orderableTestId&quot;: &quot;deserunt veniam voluptate&quot;
            },
            {
                &quot;orderableTestId&quot;: &quot;minim occaecat sint ut cupidatat&quot;
            }
        ],
        &quot;orderReceiptPath&quot;: &quot;deserunt&quot;,
        &quot;orderStatusFlag&quot;: &quot;ullamco et ad eu&quot;,
        &quot;referrals&quot;: &quot;id ut est elit eiusmod&quot;,
        &quot;reportingFlag&quot;: &quot;commodo in incididunt fugiat laborum&quot;,
        &quot;requisitionBase64&quot;: &quot;amet dolor&quot;,
        &quot;specimanType&quot;: &quot;sed exercitation&quot;,
        &quot;specimenId&quot;: &quot;sint eu voluptate cupidatat&quot;,
        &quot;testClassification&quot;: &quot;magna enim id qui officia&quot;
    },
    &quot;testNotes&quot;: {
        &quot;diagnosticNotes&quot;: &quot;qui ullamco&quot;,
        &quot;medicationNotes&quot;: &quot;non aute consectetur qui cupidatat&quot;,
        &quot;notes&quot;: &quot;non Duis cupidatat dolor&quot;,
        &quot;referralNotes&quot;: &quot;aliquip ullamco minim&quot;
    }
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">connectedTestId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.submission_id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Connected Test /  GetTestDetailsById" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.connected.HealthcareService/GetTestDetailsById</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
	&quot;test_id&quot;:&quot;${connectedTestId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Connected Test /  ListConnectedTests" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.connected.HealthcareService/ListConnectedTests</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;page_number&quot;: 1,
    &quot;page_size&quot;: 1,
    &quot;sort_ascending&quot;: true,
    &quot;userId&quot;: &quot;6512d485f7f8935ea3994013&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/connected-test [POST]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;basicInfo&quot;:{&quot;userId&quot;:&quot;6512d485f7f8935ea3994013&quot;,&quot;vendorLabTestId&quot;:&quot;vendorLabTestId&quot;,&quot;type&quot;:&quot;type&quot;,&quot;nationalHealthId&quot;:1,&quot;healthServiceId&quot;:&quot;hea;thServiceId&quot;,&quot;tenantId&quot;:&quot;tenantId&quot;,&quot;source&quot;:&quot;source&quot;},&quot;orderInfo&quot;:{&quot;orderId&quot;:&quot;orderId&quot;,&quot;status&quot;:&quot;statusId&quot;,&quot;statusMessage&quot;:&quot;statusMessage&quot;,&quot;statusMessageActions&quot;:[{&quot;id&quot;:&quot;id&quot;,&quot;value&quot;:&quot;value&quot;,&quot;description&quot;:&quot;description&quot;}],&quot;encounterId&quot;:&quot;encounterId&quot;,&quot;isSyncedWithEhr&quot;:true,&quot;result&quot;:&quot;result&quot;,&quot;questionnaireId&quot;:&quot;questionnaireId&quot;},&quot;testNotes&quot;:{&quot;notes&quot;:&quot;notes&quot;,&quot;medicationNotes&quot;:&quot;medicationNotes&quot;,&quot;referralNotes&quot;:&quot;referralNotes&quot;,&quot;diagnosticNotes&quot;:&quot;diagnosticNotes&quot;},&quot;paymentDetails&quot;:{&quot;paymentMode&quot;:&quot;paymentMode&quot;,&quot;insuranceInfoId&quot;:&quot;insuranceInfoId&quot;,&quot;paymentTransactionId&quot;:&quot;paymentTransactionId&quot;,&quot;paymentDetails&quot;:&quot;paymentDetails&quot;},&quot;providerInfo&quot;:{&quot;orderingProviderId&quot;:&quot;orderingProviderId&quot;,&quot;assignedProviderId&quot;:1,&quot;orderingProviderNpi&quot;:1},&quot;testDetails&quot;:{&quot;metadata&quot;:{&quot;qrData&quot;:&quot;qrdata&quot;,&quot;kitUploadId&quot;:&quot;kitUploadID&quot;,&quot;responseMessage&quot;:&quot;responseMessage&quot;,&quot;responseTitle&quot;:&quot;responseTitle&quot;,&quot;responseCode&quot;:200,&quot;imageType&quot;:&quot;imageType&quot;,&quot;type&quot;:&quot;type&quot;,&quot;manufacturer&quot;:&quot;manufacturer&quot;,&quot;casseteLotNumber&quot;:&quot;casseteLotNumber&quot;,&quot;outcomeIgm&quot;:true,&quot;outcomeIgg&quot;:true,&quot;outcome&quot;:&quot;outcome&quot;,&quot;selfAssessmentOutcomeIgm&quot;:true,&quot;selfAssessmentOutcomeIgg&quot;:true,&quot;selfAssessmentOutcome&quot;:&quot;selfAssessmentOutcome&quot;,&quot;casseteExpirationDate&quot;:&quot;expDate&quot;,&quot;labTestOrderableId&quot;:&quot;labTestOrderableId&quot;,&quot;skuId&quot;:&quot;skuID&quot;,&quot;cassetteVerification&quot;:&quot;verification&quot;},&quot;requisitionBase64&quot;:&quot;requisitionBase64&quot;,&quot;internalTestId&quot;:&quot;internalTestId&quot;,&quot;medications&quot;:&quot;medications&quot;,&quot;referrals&quot;:&quot;referrals&quot;,&quot;diagnostics&quot;:&quot;diagnostics&quot;,&quot;orderableTestIds&quot;:[&quot;orderableTestIds&quot;],&quot;orderableTests&quot;:[{&quot;orderableTestId&quot;:&quot;orderableTestId&quot;}],&quot;orderableTestResults&quot;:[{&quot;orderableTestId&quot;:&quot;orderableTestId&quot;,&quot;collectionDate&quot;:&quot;collectionDate&quot;,&quot;testResult&quot;:&quot;testResult&quot;,&quot;outcome&quot;:&quot;outcome&quot;,&quot;responseMessage&quot;:&quot;responseMessage&quot;,&quot;responseTitle&quot;:&quot;responseTitle&quot;,&quot;responseCode&quot;:200}],&quot;testClassification&quot;:&quot;TEST_CLASSIFICATION_GENERAL&quot;,&quot;isOnsiteTest&quot;:true,&quot;specimenId&quot;:&quot;specimenId&quot;,&quot;labVendorConfirmationId&quot;:&quot;labVendorConfirmationId&quot;,&quot;deviceIdentifier&quot;:2,&quot;deviceSerialNumber&quot;:&quot;deviceSerialNumber&quot;,&quot;isAutoGenerated&quot;:true,&quot;reportingFlag&quot;:&quot;reportingFlag&quot;,&quot;notificationFlag&quot;:&quot;notificationFlag&quot;,&quot;orderStatusFlag&quot;:&quot;orderStatusFlag&quot;,&quot;orderReceiptPath&quot;:&quot;orderReceiptPath&quot;,&quot;labTestType&quot;:&quot;labTestType&quot;,&quot;specimanType&quot;:&quot;specimanType&quot;,&quot;medicalCode&quot;:&quot;medicalCode&quot;,&quot;testName&quot;:&quot;&quot;,&quot;testFormat&quot;:&quot;TEST_FORMAT_UNSPECIFIED&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/connected-test</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Email Template ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">connectedTestId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.submissionId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/connected-test [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/connected-test/${connectedTestId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/connected-test/list [POST]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:true,&quot;userId&quot;:&quot;6512d485f7f8935ea3994013&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/connected-test/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="10 User / 500 Loops -Media" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">500</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Media / CreateMedia" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.media.MediaService/CreateMedia</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;description&quot;: &quot;ex consectetur velit anim&quot;,
    &quot;labels&quot;: [
        &quot;ut et nulla sint&quot;,
        &quot;labore adipisicing&quot;
    ],
    &quot;name&quot;: &quot;dolore eiusmod quis labore dolor&quot;,
    &quot;short_description&quot;: &quot;enim sit&quot;,
    &quot;type&quot;: 2
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Media  ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">mediaId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.media.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media/upload" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="./README.md" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">text/x-web-markdown</stringProp>
                <stringProp name="File.path">./README.md</stringProp>
                <stringProp name="File.paramname">file</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media/upload/${mediaId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Media / GetMedia" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.media.MediaService/GetMedia</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;id&quot;: &quot;${mediaId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Media  ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">download_endpoint</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.media.endpoint</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media/download" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="./README.md" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">text/x-web-markdown</stringProp>
                <stringProp name="File.path">./README.md</stringProp>
                <stringProp name="File.paramname">file</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">${download_endpoint}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Media / UpdateMedia" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.media.MediaService/UpdateMedia</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;description&quot;: &quot;eiusmod&quot;,
    &quot;id&quot;: &quot;${mediaId}&quot;,
    &quot;labels&quot;: [
        &quot;tempor mollit nostrud culpa&quot;
    ],
    &quot;name&quot;: &quot;id&quot;,
    &quot;short_description&quot;: &quot;anim&quot;,
    &quot;type&quot;: &quot;MEDIA_TYPE_UNSPECIFIED&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Media / ListMedia" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.media.MediaService/ListMedia</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;page_number&quot;: 1,
    &quot;page_size&quot;: 10,
    &quot;sort_ascending&quot;: true
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <vn.zalopay.benchmark.GRPCSampler guiclass="vn.zalopay.benchmark.GRPCSamplerGui" testclass="vn.zalopay.benchmark.GRPCSampler" testname="Media / DeleteMedia" enabled="true">
          <stringProp name="GRPCSampler.protoFolder">/Users/jeffmiller/source/OpenCDX/opencdx-proto/src/main/proto</stringProp>
          <stringProp name="GRPCSampler.libFolder"></stringProp>
          <stringProp name="GRPCSampler.metadata"></stringProp>
          <stringProp name="GRPCSampler.host">localhost</stringProp>
          <stringProp name="GRPCSampler.port">8080</stringProp>
          <stringProp name="GRPCSampler.fullMethod">cdx.opencdx.grpc.media.MediaService/DeleteMedia</stringProp>
          <stringProp name="GRPCSampler.deadline">1000</stringProp>
          <boolProp name="GRPCSampler.tls">true</boolProp>
          <boolProp name="GRPCSampler.tlsDisableVerification">true</boolProp>
          <stringProp name="GRPCSampler.channelAwaitTermination">1000</stringProp>
          <stringProp name="GRPCSampler.maxInboundMessageSize">4194304</stringProp>
          <stringProp name="GRPCSampler.maxInboundMetadataSize">8192</stringProp>
          <stringProp name="GRPCSampler.requestJson">{
    &quot;id&quot;: &quot;${mediaId}&quot;
}</stringProp>
        </vn.zalopay.benchmark.GRPCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media [POST]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;description&quot;: &quot;ex consectetur velit anim&quot;,&#xd;
    &quot;labels&quot;: [&#xd;
        &quot;ut et nulla sint&quot;,&#xd;
        &quot;labore adipisicing&quot;&#xd;
    ],&#xd;
    &quot;name&quot;: &quot;dolore eiusmod quis labore dolor&quot;,&#xd;
    &quot;shortDescription&quot;: &quot;enim sit&quot;,&#xd;
    &quot;type&quot;: 2&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Media  ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">mediaId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.media.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media/upload" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="./README.md" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">text/x-web-markdown</stringProp>
                <stringProp name="File.path">./README.md</stringProp>
                <stringProp name="File.paramname">file</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media/upload/${mediaId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media/${mediaId}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Media  ID" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">download_endpoint</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.media.endpoint</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">No_Default</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media/download" enabled="true">
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="./README.md" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">text/x-web-markdown</stringProp>
                <stringProp name="File.path">./README.md</stringProp>
                <stringProp name="File.paramname">file</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">${download_endpoint}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media [PUT]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;${mediaId}&quot;,&quot;name&quot;:&quot;name&quot;,&quot;shortDescription&quot;:&quot;shortDescription&quot;,&quot;description&quot;:&quot;description&quot;,&quot;labels&quot;:[&quot;labels&quot;],&quot;type&quot;:&quot;MEDIA_TYPE_IMAGE&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media/list  [POST]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;pageSize&quot;:10,&quot;pageNumber&quot;:1,&quot;sortAscending&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/media  [DELETE]]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/media/${mediaId}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
