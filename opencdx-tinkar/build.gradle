/*
 * This file was generated by the Gradle "init" task.
 */
plugins {
    id("application")
}

dependencies {
    // Spring

    implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "io.github.lognet:grpc-spring-boot-starter:${grpcSpringBootStarterVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"

    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    implementation "de.codecentric:spring-boot-admin-starter-client"

    //Database
    implementation "com.github.cloudyrock.mongock:mongock-spring-v5:${mongoData}"
    implementation "com.github.cloudyrock.mongock:mongodb-springdata-v3-driver:${mongoData}"
    implementation "com.github.cloudyrock.mongock:mongock-bom:${mongoData}"

    // Swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    //GRPC - To enable the GRPC uncomment the following two lines
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation project(":opencdx-proto")
    implementation project(":opencdx-commons")
    implementation project(":opencdx-client")

    implementation "dev.ikm.tinkar:entity:1.12.0"
    implementation "dev.ikm.tinkar:common:1.12.0"
    implementation "dev.ikm.tinkar:coordinate:1.12.0"
    implementation "dev.ikm.tinkar:data-mvstore-provider:1.12.0"
    implementation "dev.ikm.tinkar:data-spinedarray-provider:1.12.0"
    implementation "dev.ikm.tinkar:data-websocket-client-provider:1.12.0"
    implementation "dev.ikm.tinkar:data-ephemeral-provider:1.12.0"
    implementation "dev.ikm.tinkar:executor-provider:1.12.0"
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    testImplementation "io.nats:nats-spring:${natsSpringVersion}"


}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
    all*.exclude module : 'logback-classic'
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "build/generated/sources/annotationProcessor/java/main"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }

    }
    test {
        java {
            srcDirs = ["src/test/java", "build/generated/sources/annotationProcessor/java/test"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}

bootJar {
    enabled = true
}

application {
    // Define the main class for the application.
    mainClass = "cdx.opencdx.tinkar.Application"
}
