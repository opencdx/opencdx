version: '3'
services:
  gateway:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/gateway:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs
    ports:
      - "8080:8080"
  anf:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/anf:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs
  routine:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/routine:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      admin:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs    

  protector:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/protector:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs
      
  predictor:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/predictor:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ../certs:/certs

  helloworld:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/helloworld:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  iam:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/iam:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ../certs:/certs

  media:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/media:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  connected-test:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/connected-test:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  communications:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/communications:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  audit:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/audit:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  tinkar:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 60s
        max_attempts: 5
        window: 60s
    image: opencdx/tinkar:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8080/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    depends_on:
      config:
        condition: service_healthy
      discovery:
        condition: service_healthy
      database:
        condition: service_healthy
      nats:
        condition: service_started
      iam:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  admin:
    image: opencdx/admin:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8861/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "8861:8861"
    depends_on:
      discovery:
        condition: service_healthy
    volumes:
      - ../certs:/certs

  discovery:
    image: opencdx/discovery:latest
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "8761:8761"
    volumes:
      - ../certs:/certs

  config:
    image: opencdx/config:latest
    volumes:
      - ../certs:/certs
    ports:
      - "8888:8888"
    depends_on:
      discovery:
        condition: service_healthy
    healthcheck:
      test: "curl -k --fail --silent https://localhost:8888/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  database:
    image: opencdx/mongodb:latest
    volumes:
      - ../certs:/certs
      - ../data/mongodb:/data/db
    ports:
        - "27017:27017"
    healthcheck:
      test: "echo 'db.runCommand({serverStatus:1}).ok' | mongosh localhost:27017/test --quiet"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  nats:
    image: nats:alpine3.18
    volumes:
      - ../certs:/certs
      - ../data/nats:/opt/nats/data
      - ../opencdx-nats/nats-server.conf:/nats-server.conf
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: "-c /nats-server.conf"
    environment:
      NATS_STREAM_MAX_AGE: 86400s

  trace_storage:
    image: openzipkin/zipkin-mysql:2
    container_name: mysql
    # Uncomment to expose the storage port for testing
    ports:
      - "3306:3306"
    volumes:
      - ../data/mysql:/opt/mysql/data
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin:2
    volumes:
      - ../certs:/certs
      #- ../opencdx-zipkin/zipkin.conf:/zipkin.conf
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      #- SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
#      - JAVA_OPTS=  -Djavax.net.ssl.trustStore=/certs/opencdx-keystore.p12 -Djavax.net.ssl.trustStorePassword=opencdx -Djavax.net.ssl.trustStoreType=PKCS12 -Djavax.net.ssl.keyStore=/certs/opencdx-keystore.p12 -Djavax.net.ssl.keyStorePassword=opencdx -Djavax.net.ssl.keyStoreType=PKCS12
#      - ARMERIA_SSL_KEY_STORE=file:/certs/opencdx-keystore.p12
#      - ARMERIA_SSL_KEY_ALIAS=zipkin
#      - ARMERIA_SSL_KEY_STORE_PASSWORD=opencdx
#      - ARMERIA_SSL_KEY_STORE_TYPE=PKCS12
#      - ARMERIA_SSL_TRUST_STORE=file:/certs/opencdx-keystore.p12
#      - ARMERIA_SSL_TRUST_STORE_PASSWORD=opencdx
#      - ARMERIA_SSL_TRUST_STORE_TYPE=PKCS12
#      - ARMERIA_SSL_ENABLED=TRUE
#      - ARMERIA_PORTS_0_PORT=9411
#      - ARMERIA_PORTS_0_PROTOCOLS_0=https

     #- JAVA_OPTS=-Xms512m -Xmx1g
    healthcheck:
      test: "curl --fail --silent localhost:9411/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "9411:9411"
    restart: unless-stopped
  zipkin_dependencies:
    image: openzipkin/zipkin-dependencies:2
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to adjust memory used by the dependencies job
      - JAVA_OPTS=-verbose:gc -Xms512m -Xmx512m
    restart: unless-stopped
